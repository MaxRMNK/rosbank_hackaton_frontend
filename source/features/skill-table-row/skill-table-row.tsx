import cn from 'classnames';
import classes from './styles.module.scss';
import { typeSkillTableRowProps, typeLevel } from './types';
import { SkillInfo } from '@/source/shared/skill-info';

export const SkillTableRow: React.FC<typeSkillTableRowProps> = props => {
  const {
    skillName,
    title,
    image,
    keySkill,
    type,
    level,
    targetLevel,
    // setIsPeople,
    className,
  } = props;

  let sumPeople: number = 0;

  for (let value of Object.values(level)) {
    sumPeople += value;
  }

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è "–£—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–∞"
  const renderLevel = (obj: typeLevel) => {
    return Object.keys(obj).map(key => {
      if (obj[key] <= 0) return;
      return (
        <div
          key={key}
          className={cn(classes.line, classes[key])}
          style={{
            width: `${(obj[key] * 100) / sumPeople}%`,
          }}
        >
          {obj[key]}
        </div>
      );
    });
  };

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è "–¢—Ä–µ–±—É–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å"
  const renderTargetLevel = (obj: typeLevel) => {
    return Object.keys(obj).map(key => {
      if (obj[key] <= 0) return;
      return (
        <div key={key} className={cn(classes.line, classes[key])}>
          {obj[key]}
        </div>
      );
    });
  };

  // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã—à–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π —Å–∫–∏–ª–ª–∞
  const compareLevel = (levelA: typeLevel, levelB: typeLevel): boolean => {
    for (const key in levelA) {
      if (
        levelA.hasOwnProperty(key) &&
        levelB.hasOwnProperty(key) &&
        levelB[key] > levelA[key]
      ) {
        return true;
      }
    }
    return false;
  };
  const compare = compareLevel(level, targetLevel);

  // !!!
  // –ù–µ—Ç —Ñ–æ—Ä–º—É–ª—ã –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –æ—Ç PM –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤, –∫–∞–∫
  // –≤—ã—á–∏—Å–ª—è—Ç—å % —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–ª–∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —É—Ä–æ–≤–Ω–µ–π.
  // –ü–æ—ç—Ç–æ–º—É –ø–æ–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å Warning'–æ–º –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏—è:
  // "üôÅ —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É –Ω–∞ 54%"

  return (
    <div className={cn(className, classes.tableRow)}>
      <div
        className={cn(classes.skills, classes.tableCell, {
          [classes.key]: keySkill,
        })}
      >
        <SkillInfo
          title={title}
          image={image}
          keySkill={keySkill}
          type={type}
          className={cn(classes.skillInfo)}
        />
      </div>

      <div className={cn(classes.users, classes.tableCell)}>{sumPeople}</div>

      <div className={cn(classes.level, classes.tableCell)}>
        {renderLevel(level)}
      </div>

      <div className={cn(classes.targetLevel, classes.tableCell)}>
        {renderTargetLevel(targetLevel)}
      </div>

      <div className={cn(classes.status, classes.tableCell)}>
        {compare && <span className={cn(classes.warning)}></span>}
      </div>
    </div>
  );
};
